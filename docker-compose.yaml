
x-spark-common: &spark-common
  image: bitnami/spark:latest
  depends_on:
    - spark-master
  environment:
    SPARK_MODE: worker
    SPARK_MASTER_URL: spark://spark-master:7077
    SPARK_WORKER_CORES: ${SPARK_WORKER_CORES}
    SPARK_WORKER_MEMORY: ${SPARK_WORKER_CORES}
  networks:
    - datamaster

x-airflow-common: &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  env_file:
      - .env
  volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./:/opt/airflow/etl
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
      - ./requirements.txt:/tmp/requirements.txt
  depends_on:
    - postgres-container
    - postgres-airflow
    - init-airflow
  networks:
    - datamaster
  restart: always
  command: bash -c "pip install --no-cache-dir -r /tmp/requirements.txt && airflow webserver"

services:
  postgres-container:
    image: postgres:14
    restart: on-failure
    container_name: postgres-container
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${HOST_PORT}:${CONTAINER_PORT}"
    volumes:
      - postgres-data-main:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 5s
    networks:
      - datamaster

  postgres-airflow:
    image: postgres:14
    restart: on-failure
    container_name: postgres-airflow
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5433:5432"
    volumes:
      - postgres-data-airflow:/var/lib/postgresql/data
    networks:
      - datamaster

  # Inicializaci√≥n de Airflow
  init-airflow:
    image: apache/airflow:latest
    depends_on:
      - postgres-airflow
    command:
      bash -c "airflow db init && 
               airflow users create --username airflow --password airflow --firstname airflow --lastname airflow --role Admin --email admin@example.com"
    restart: on-failure
    networks:
      - datamaster
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres-airflow/airflow
  

  # Airflow Webserver
  airflow-webserver:
    <<: *airflow-common
    container_name: airflow_webserver
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "${AIRFLOW_WEB_PORT}:${AIRFLOW_WEB_CONTAINER_PORT}"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres-airflow/airflow
      - AIRFLOW__CORE__FERNET_KEY="${AIRFLOW__CORE__FERNET_KEY}"
      - AIRFLOW__WEBSERVER__DEFAULT_USER_USERNAME= ${AIRFLOW_WEB_USER}
      - AIRFLOW__WEBSERVER__DEFAULT_USER_PASSWORD= ${AIRFLOW_WEB_PASSWORD}
      - AIRFLOW_WWW_USER_USERNAME=${AIRFLOW_WEB_USER}
      - AIRFLOW_WWW_USER_PASSWORD=${AIRFLOW_WEB_PASSWORD}
      - AIRFLOW__WEBSERVER__SECRET_KEY=secret
      - AIRFLOW_CONN_SPARK_DEFAULT=spark://spark-master:7077
    command: webserver
    

  # Airflow Scheduler
  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow_scheduler
    depends_on:
      - postgres-airflow
      - init-airflow
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres-airflow/airflow
      - AIRFLOW__CORE__FERNET_KEY="${AIRFLOW__CORE__FERNET_KEY}"
      - AIRFLOW_WWW_USER_USERNAME=${AIRFLOW_WEB_USER}
      - AIRFLOW_WWW_USER_PASSWORD=${AIRFLOW_WEB_PASSWORD}
      - AIRFLOW__WEBSERVER__SECRET_KEY=secret
      - AIRFLOW_CONN_SPARK_DEFAULT=spark://spark-master:7077
    command: airflow scheduler

  spark-master:
    image: bitnami/spark:latest
    container_name: spark_master
    restart: always
    depends_on:
      postgres-container:
        condition: service_healthy
    environment:
      - SPARK_MODE=master
      - SPARK_LOCAL_IP=spark-master
      - SPARK_DAEMON_MEMORY=1g
      - SPARK_CLASSPATH=org.postgresql:postgresql:42.2.27
      - SPARK_DRIVER_EXTRA_CLASSPATH=/opt/bitnami/spark/jars/postgresql-42.2.27.jar
      - SPARK_EXECUTOR_EXTRA_CLASSPATH=/opt/bitnami/spark/jars/postgresql-42.2.27.jar
    ports:
      - "${SPARK_MASTER_PORT}:${SPARK_MASTER_CONTAINER_PORT}"  # Puerto del cluster de Spark
      - "${SPARK_WEB_PORT}:${SPARK_WEB_CONTAINER_PORT}"  # Interfaz Web de Spark
    volumes:
      - ./jobs:/opt/bitnami/spark/jobs
    networks:
      - datamaster

  spark-worker-1:
    <<: *spark-common

  spark-worker-2:
    <<: *spark-common

volumes:
  postgres-data-main:
    driver: local
  postgres-data-airflow:
    driver: local


networks:
  datamaster:
    driver: bridge

