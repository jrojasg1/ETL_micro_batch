version: '3.8'

x-spark-common: &spark-common
  image: bitnami/spark:latest
  depends_on:
    - spark-master
  environment:
    SPARK_MODE: worker
    SPARK_MASTER_URL: spark://spark-master:7077
    SPARK_WORKER_CORES: ${SPARK_WORKER_CORES}
    SPARK_WORKER_MEMORY: ${SPARK_WORKER_MEMORY}
  networks:
    - datamaster

services:
  postgres:
    image: postgres:14
    restart: on-failure
    container_name: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${HOST_PORT}:${CONTAINER_PORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ./backup/data.dump:/docker-entrypoint-initdb.d/data.dump
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 5s
    networks:
      - datamaster

  spark-master:
    image: bitnami/spark:latest
    container_name: spark_master
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPARK_MODE=master
      - SPARK_LOCAL_IP=spark-master
      - SPARK_DAEMON_MEMORY=1g
      - SPARK_CLASSPATH=org.postgresql:postgresql:42.2.27
      - SPARK_DRIVER_EXTRA_CLASSPATH=/opt/bitnami/spark/jars/postgresql-42.2.27.jar
      - SPARK_EXECUTOR_EXTRA_CLASSPATH=/opt/bitnami/spark/jars/postgresql-42.2.27.jar
    ports:
      - "${SPARK_MASTER_PORT}:${SPARK_MASTER_CONTAINER_PORT}"  # Puerto del cluster de Spark
      - "${SPARK_WEB_PORT}:${SPARK_WEB_CONTAINER_PORT}"  # Interfaz Web de Spark
    volumes:
      - ./jobs:/opt/bitnami/spark/jobs
    networks:
      - datamaster

  spark-worker-1:
    <<: *spark-common

  spark-worker-2:
    <<: *spark-common

volumes:
  postgres-data:
    driver: local

networks:
  datamaster:
    driver: bridge
